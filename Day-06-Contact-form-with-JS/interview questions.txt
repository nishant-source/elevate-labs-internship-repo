1. How to validate form inputs in JavaScript?
ðŸ‘‰ By checking the values of input fields with JavaScript. For example, using if (input.value.trim() === "") to see if itâ€™s empty, or using regex to test email.

2. What is event.preventDefault()?
ðŸ‘‰ It stops the browserâ€™s default behavior. For example, forms usually reload the page when submitted. preventDefault() stops that so we can handle validation first.

3. How to check email format with regex?
ðŸ‘‰ Use a regex pattern like:

/^[^\s@]+@[^\s@]+\.[^\s@]+$/
This checks that the email has text before @, then a domain, and then .com or similar.

4. Difference between client-side and server-side validation?
ðŸ‘‰ Client-side runs in the browser with JavaScript, gives instant feedback.
ðŸ‘‰ Server-side runs on the server after submission, more secure and final.
ðŸ‘‰ Best practice: use both.

5. How to show error messages dynamically?
ðŸ‘‰ By changing the HTML content with JavaScript. Example:

document.getElementById("error-msg").innerHTML = "Name is required";
document.getElementById("error-msg").style.display = "block";
6. What is form submission?
ðŸ‘‰ When you click submit, the data inside the form is sent (usually to a server). In this project, we just show messages, but normally it sends data using HTTP.

7. How to improve form accessibility?
ðŸ‘‰ Use <label for="id"> for each input, use placeholders carefully, add clear error messages, and allow keyboard navigation.

8. How to handle form reset?
ðŸ‘‰ Use form.reset() in JavaScript to clear all fields after a successful submission.

9. What are common security issues with forms?
ðŸ‘‰ - SQL injection (if input is not checked on server).
ðŸ‘‰ - XSS (Cross-Site Scripting).
ðŸ‘‰ - Fake/invalid data.
ðŸ‘‰ Thatâ€™s why server-side validation is always needed.

10. How does HTML5 built-in validation differ from JS validation?
ðŸ‘‰ HTML5 gives simple validation using attributes like required or type="email".
ðŸ‘‰ JavaScript validation is more flexible â€” you can write your own rules and show custom error messages.

